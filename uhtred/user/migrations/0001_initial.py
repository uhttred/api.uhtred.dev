# Generated by Django 4.2.4 on 2023-08-16 22:26

from django.db import migrations, models
import django.db.models.functions.text
import uhtred.core.validators
import uhtred.user.models.user
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('name', models.CharField(blank=True, default=str, max_length=40, validators=[uhtred.core.validators.NameValidator(), uhtred.core.validators.NoPoitSequenceValidator()], verbose_name='name')),
                ('role', models.CharField(choices=[('collaborator', 'collaborator'), ('manager', 'manager')], default='manager', max_length=12, verbose_name='role')),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True, validators=[uhtred.core.validators.EmailValidator()], verbose_name='email address')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists'}, max_length=25, unique=True, validators=[uhtred.core.validators.UsernameValidator(), uhtred.core.validators.NoPoitSequenceValidator()], verbose_name='username')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', uhtred.user.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Collaborator',
            fields=[
            ],
            options={
                'verbose_name': 'collaborator',
                'verbose_name_plural': 'collaborators',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', uhtred.user.models.user.ManagerManager()),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
            ],
            options={
                'verbose_name': 'manager',
                'verbose_name_plural': 'managers',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', uhtred.user.models.user.ManagerManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('username'), name='unique_user_username'),
        ),
    ]
