# Generated by Django 4.2.6 on 2023-10-21 00:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text
import uhtred.core.validators
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0002_image_its'),
        ('insight', '0004_insight_show_updated_at_insight_youtube_src'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('name', models.CharField(max_length=45, verbose_name='name')),
                ('username', models.CharField(default=None, error_messages={'unique': 'An author with that username already exists'}, max_length=25, null=True, unique=True, validators=[uhtred.core.validators.UsernameValidator(), uhtred.core.validators.NoPoitSequenceValidator()], verbose_name='username')),
                ('pt_name', models.CharField(blank=True, default='', max_length=60, verbose_name='name (pt)')),
                ('headline', models.CharField(blank=True, default='', max_length=100, verbose_name='headline')),
                ('website', models.URLField(blank=True, default='', verbose_name='website')),
                ('instagram', models.URLField(blank=True, default='', verbose_name='instagram')),
                ('linkedin', models.URLField(blank=True, default='', verbose_name='instagram')),
            ],
            options={
                'verbose_name': 'author',
                'verbose_name_plural': 'authors',
            },
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('title', models.CharField(max_length=230, verbose_name='title')),
                ('pt_title', models.CharField(blank=True, default=str, max_length=230, verbose_name='title (PT)')),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('pt_description', models.TextField(blank=True, default=str, verbose_name='description (PT)')),
                ('status', models.TextField(choices=[('in_launch', 'in launch'), ('completed', 'completed')], default='in_launch', max_length=9, verbose_name='status')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
            ],
            options={
                'verbose_name': 'serie',
                'verbose_name_plural': 'series',
            },
        ),
        migrations.CreateModel(
            name='SerieItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('number', models.PositiveIntegerField(blank=True, default=None, null=True, verbose_name='order number')),
            ],
            options={
                'verbose_name': 'serie item',
                'verbose_name_plural': 'serie items',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('name', models.CharField(max_length=60, verbose_name='name')),
                ('pt_name', models.CharField(blank=True, default='', max_length=60, verbose_name='name (PT)')),
                ('slug', models.SlugField(allow_unicode=True, editable=False, max_length=120, verbose_name='slug')),
                ('is_category', models.BooleanField(default=False, verbose_name='is category')),
                ('is_main', models.BooleanField(default=False, verbose_name='is main topic')),
            ],
            options={
                'verbose_name': 'topic',
                'verbose_name_plural': 'topics',
            },
        ),
        migrations.RemoveField(
            model_name='insight',
            name='tags',
        ),
        migrations.AddField(
            model_name='insight',
            name='is_featured',
            field=models.BooleanField(default=False, verbose_name='is featured'),
        ),
        migrations.AddConstraint(
            model_name='topic',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='unique_topic_name'),
        ),
        migrations.AddConstraint(
            model_name='topic',
            constraint=models.UniqueConstraint(fields=('slug',), name='unique_topic_slug'),
        ),
        migrations.AddField(
            model_name='serieitem',
            name='insight',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insight.insight', verbose_name='inisght'),
        ),
        migrations.AddField(
            model_name='serieitem',
            name='serie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insight.serie', verbose_name='serie'),
        ),
        migrations.AddField(
            model_name='serie',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='series', to='insight.author'),
        ),
        migrations.AddField(
            model_name='serie',
            name='created_by',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='series', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='serie',
            name='insights',
            field=models.ManyToManyField(related_name='series', through='insight.SerieItem', to='insight.insight'),
        ),
        migrations.AddField(
            model_name='serie',
            name='topics',
            field=models.ManyToManyField(blank=True, related_name='series', to='insight.topic'),
        ),
        migrations.AddField(
            model_name='author',
            name='avatar',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.image', verbose_name='avatar'),
        ),
        migrations.AddField(
            model_name='insight',
            name='topics',
            field=models.ManyToManyField(blank=True, related_name='insights', to='insight.topic'),
        ),
        migrations.AlterField(
            model_name='insight',
            name='author',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insights', to='insight.author'),
        ),
        migrations.AddConstraint(
            model_name='serieitem',
            constraint=models.UniqueConstraint(fields=('insight', 'serie'), name='unique_serie_insight'),
        ),
        migrations.AddConstraint(
            model_name='serie',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('title'), name='unique_serie_title'),
        ),
        migrations.AddConstraint(
            model_name='serie',
            constraint=models.UniqueConstraint(fields=('slug',), name='unique_serie_slug'),
        ),
        migrations.AddConstraint(
            model_name='author',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('username'), name='unique_author_username'),
        ),
    ]
